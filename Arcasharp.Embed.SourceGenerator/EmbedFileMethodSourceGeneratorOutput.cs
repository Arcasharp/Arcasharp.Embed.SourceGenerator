using System.Text;

namespace Arcasharp.Embed.SourceGenerator;

internal sealed class EmbedFileMethodSourceGeneratorOutput
{
    private readonly EmbeddedFile _file;

    public EmbedFileMethodSourceGeneratorOutput(EmbeddedFile file)
    {
        _file = file;
    }

    public string GenerateSource()
    {
        string contentAsByteArrayInitializer = GetContentAsByteArrayInitializer(_file);

        string codeWithoutNamespace = $$"""
                                        // <auto-generated>
                                        #nullable enable

                                        using global::System.Runtime.CompilerServices;

                                        {{_file.ClassVisibility}} static partial class {{_file.ClassName}}
                                        {
                                            [CompilerGenerated]
                                            private static byte[] _{{_file.MethodName}} = {{contentAsByteArrayInitializer}};
                                          
                                            [CompilerGenerated]
                                            {{_file.MethodVisibility}} static partial byte[] {{_file.MethodName}}() 
                                            {
                                                return _{{_file.MethodName}};
                                            }
                                        }
                                        """;
        
        string codeWithNamespace = $$"""
                        // <auto-generated>
                        #nullable enable

                        using global::System.Runtime.CompilerServices;

                        namespace {{_file.Namespace}}
                        {
                            {{_file.ClassVisibility}} static partial class {{_file.ClassName}}
                            {
                                [CompilerGenerated]
                                private static byte[] _{{_file.MethodName}} = {{contentAsByteArrayInitializer}};
                              
                                [CompilerGenerated]
                                {{_file.MethodVisibility}} static partial byte[] {{_file.MethodName}}() 
                                {
                                    return _{{_file.MethodName}};
                                }
                            }
                        }
                        """;

        return _file.Namespace == string.Empty ? codeWithoutNamespace : codeWithNamespace;
    }

    private static string GetContentAsByteArrayInitializer(EmbeddedFile file)
    {
        StringBuilder builder = new();
        builder.Append("new byte[] { ");
        byte[] content = File.ReadAllBytes(file.FullFilePath);
        foreach (byte b in content)
        {
            builder.AppendFormat("0x{0:X2}, ", b);
        }

        builder.Remove(builder.Length - 2, 2);
        builder.Append(" }");
        return builder.ToString();
    }
}